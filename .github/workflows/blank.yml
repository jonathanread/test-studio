# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: Get Test Studio Runtime
        shell: pwsh
        run: |
             $r = Invoke-WebRequest -Uri "https://drive.google.com/uc?export=download&id=1QYdNQYTls9oqLB6QCR1f9DG_ZxTJstDn" -SessionVariable $googleDriveSession
             #Get the actual uri from Google warning page
             $r.Content -match 'action=\"(.*?)\"'
             Add-Type -AssemblyName System.Web
             #Fix some url encoding
             $d = [System.Web.HttpUtility]::HtmlDecode($matches[1])
             #Download Test Studio
             Invoke-WebRequest -Uri $d -WebSession $googleDriveSession -Method Post -OutFile "TestStudio_Runtime.msi"
      - name: Install Test Studio Runtime
        shell: pwsh
        run: |
             $log = "install.log" 
             $procMain = Start-Process "msiexec" "/i `"TestStudio_Runtime.msi`" /qn /l*! `"$log`"" -NoNewWindow -PassThru
             #uncomment below if you want to debug the install process
             #$procLog = Start-Process "powershell" "Get-Content -Path `"$log`" -Wait" -NoNewWindow -PassThru 
             $procMain.WaitForExit() 
             #uncomment below if you want to debug the install process
             #$procLog.Kill()
      - name: Run Test List
        shell: cmd
        run: |
            "C:\Program Files (x86)\Progress\Test Studio\Bin\ArtOfTest.Runner.exe" list="${{ github.workspace }}\TestStudioProject1\TestLists\TestList1.aiilist" result="teststudio" junit
      - name: check directories
        shell: pwsh
        run: |
          ls ${{ github.workspace }}
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          files: |
            ${{ github.workspace }}\TestStudioProject1\Results\*.xml
